#
# Executes commands at the start of an interactive session.
#
# Authors:
#   Sorin Ionescu <sorin.ionescu@gmail.com>
#

# Source Prezto.
if [[ -s "${ZDOTDIR:-$HOME}/.zprezto/init.zsh" ]]; then
  source "${ZDOTDIR:-$HOME}/.zprezto/init.zsh"
fi

# Customize to your needs...


if [[ -s "~/.dotfiles/zsh/tmuxinator.zsh" ]]; then
    source "~/.dotfiles/zsh/tmuxinator.zsh"
fi


# Suggest package for command not found
if [[ -s /etc/zsh_command_not_found ]]; then
    . /etc/zsh_command_not_found
fi

if [[ -x /usr/bin/vim ]]; then
    # We want these to exist
    mkdir -p ${ZDOTDIR:-$HOME}/.vim/autoload ${ZDOTDIR:-$HOME}/.vim/bundle

    # Install vundle
    if [ ! -d ~/.vim/bundle/vundle ]; then
        echo "Could not find vim vundle, downloading..."
        git clone https://github.com/gmarik/vundle.git ~/.vim/bundle/vundle
        echo "To initialize the vim config, please run: vim +PluginInstall +qall"
    fi
fi


# Antigen for zsh plugins
source ~/.dotfiles/antigen/antigen.zsh
antigen bundle djui/alias-tips
antigen bundle rimraf/k
antigen bundle skx/sysadmin-util
antigen bundle joel-porquet/zsh-dircolors-solarized.git
antigen bundle zsh-users/zsh-syntax-highlighting
antigen bundle unixorn/autoupdate-antigen.zshplugin
antigen bundle chrissicool/zsh-256color
antigen bundle zsh-users/zsh-history-substring-search
antigen apply


setupsolarized dircolors.ansi-dark

# zsh-history-substring-search
#
# bind UP and DOWN arrow keys
zmodload zsh/terminfo
bindkey "$terminfo[kcuu1]" history-substring-search-up
bindkey "$terminfo[kcud1]" history-substring-search-down

# bind UP and DOWN arrow keys (compatibility fallback
# for Ubuntu 12.04, Fedora 21, and MacOSX 10.9 users)
bindkey '^[[A' history-substring-search-up
bindkey '^[[B' history-substring-search-down

# bind P and N for EMACS mode
bindkey -M emacs '^P' history-substring-search-up
bindkey -M emacs '^N' history-substring-search-down

# bind k and j for VI mode
bindkey -M vicmd 'k' history-substring-search-up
bindkey -M vicmd 'j' history-substring-search-down

# Ignore ALL duplicates in history
setopt HIST_IGNORE_ALL_DUPS

# end zsh_history-substring-search


# Custom zsh-syntax-highligting matches
ZSH_HIGHLIGHT_PATTERNS+=('rm -rf *' 'fg=white,bold,bg=red')
ZSH_HIGHLIGHT_PATTERNS+=('reboot*' 'fg=white,bold,bg=red')
ZSH_HIGHLIGHT_PATTERNS+=('shutdown*' 'fg=white,bold,bg=red')
ZSH_HIGHLIGHT_PATTERNS+=('halt*' 'fg=white,bold,bg=red')
ZSH_HIGHLIGHT_PATTERNS+=('sudo *' 'fg=white,bold,bg=yellow')
ZSH_HIGHLIGHT_PATTERNS+=('sudoedit *' 'fg=white,bold,bg=yellow')


# make autocompletion faster by caching and prefix-only matching
zstyle ':completion:*' accept-exact '*(N)'
zstyle ':completion:*' use-cache on
zstyle ':completion:*' cache-path ~/.zsh/cache


# fuzzy matching of completions for when you mistype them
zstyle ':completion:*' completer _complete _match _approximate
zstyle ':completion:*:match:*' original only
zstyle ':completion:*:approximate:*' max-errors 1 numeric

# get better autocompletion accuracy by typing longer words
zstyle -e ':completion:*:approximate:*' max-errors 'reply=($((($#PREFIX+$#SUFFIX)/3))numeric)'

# ignore completion functions for commands you don't have
zstyle ':completion:*:functions' ignored-patterns '_*'

# allow one error for every three characters typed
zstyle -e ':completion:*:default' list-colors 'reply=("${PREFIX:+=(#bi)($PREFIX:t)*==34=34}:${(s.:.)LS_COLORS}")';
zstyle ':completion:*' squeeze-slashes true

# completing process IDs with menu selection
zstyle ':completion:*:*:kill:*' menu yes select
zstyle ':completion:*:kill:*'   force-list always

zstyle ':filter-select:highlight' matched fg=red
zstyle ':filter-select' max-lines 10
zstyle ':filter-select' rotate-list yes
zstyle ':filter-select' case-insensitive yes # enable case-insensitive search


# Aliases
alias dotup='git -C ~/.dotfiles submodule update --init --recursive'
alias smartgit='/net/users/tjuberg/smartgit/smartgithg-6_0_6/bin/smartgithg.sh'

# Load aliases
if [[ -s ~/.bash_aliases ]]; then
    . ~/.bash_aliases
fi

# Keep all history
setopt inc_append_history

# Lazy cd
setopt auto_cd

TMOUT=10; TRAPALRM () { zle reset-prompt }

# Allow not storing sensitive commands in history
